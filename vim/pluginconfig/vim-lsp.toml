[[plugins]]
repo = 'mattn/vim-lsp-settings'
on_ft = ['python', 'rust', 'typescript', 'cpp', 'c', 'go', 'markdown', 'tex', 'lua', 'yaml', 'java', 'terraform', 'typescriptreact']
hook_source = '''
" need install python-lsp-isort
let g:lsp_settings = {
\	'pylsp-all':{
\		'disabled': 0,
\		'workspace_config': {
\			'pylsp': {
\				'configurationSources': ['rope', 'pyflakes'],
\				'plugins': {
\					'pycodestyle': {'enabled': v:false},
\					'pydocstyle': {'enabled': v:false},
\					'pyflakes': {'enabled': v:true},
\					'pylint': {'enabled': v:true},
\					'mccabe': {'enabled': v:false},
\					'flake8': {'enabled': v:false},
\					'yapf': {'enabled': v:false},
\					'isort': {'enabled': v:true},
\				},
\			}
\		},
\	},
\	'ruff': {
\		'disabled': 0,
\		'initialization_options': {
\			'settings': {
\				'lint': { 'extendSelect': ["I"] }
\			},
\		},
\	},
\	'yaml-language-server': {
\		'disabled': 0,
\	},
\   'typescript-language-server': {
\		'disabled': 0,
\       'whitelist': ['typescript', 'typescriptreact'],
\   },
\	'efm-langserver': {
\		'disabled': 0,
\		'allowlist': ['markdown', 'tex', 'typescript', 'typescriptreact'],
\	}
\}
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
on_ft = ['python', 'rust', 'typescript', 'cpp', 'c', 'go', 'markdown', 'tex', 'lua', 'yaml', 'java', 'terraform', 'typescriptreact']
hook_source = '''
let g:lsp_format_sync_timeout = 1000
let g:lsp_competion_resolve_timeout = 50

" [debug]
" let g:lsp_log_file = expand('~/vim-lsp.log')

let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_virtual_text_enabled = 0

let g:lsp_document_code_action_signs_hint = {'text': "\uea77"}
let g:lsp_diagnostics_signs_error = {'text': "\uf467"}
let g:lsp_diagnostics_signs_warning = {'text': "!"}
let g:lsp_diagnostics_signs_hint = {'text': "\uf400"}
let g:lsp_diagnostics_float_cursor = 1
" let g:lsp_diagnostics_highlights_enabled = 0
let g:lsp_preview_float = 1

function! s:on_lsp_buffer_enabled() abort
	setlocal signcolumn=yes
	nmap <buffer> <Space>c [lsp]
	nmap <buffer> K <Plug>(lsp-hover)
	nmap <buffer> [lsp]d <Plug>(lsp-definition)
	nmap <buffer> [lsp]r <Plug>(lsp-references)
	nmap <buffer> [lsp]t <Plug>(lsp-type-definition)
	nmap <buffer> [lsp][ <Plug>(lsp-previous-diagnostic)
	nmap <buffer> [lsp]] <Plug>(lsp-next-diagnostic)
	nmap <buffer> [lsp]<C-f> <Plug>(lsp-rename)
	nnoremap <buffer> [lsp]f :<C-u>LspDocumentFormat<CR>
	vnoremap <buffer> <C-f> :<C-u>LspDocumentRangeFormat<CR>
endfunction

augroup myvimrc
	autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
	"autocmd BufWritePre * call execute('LspDocumentFormatSync')
augroup END
'''
