


[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
"nnoremap <Space>fw :<C-u>Fern .<CR>:set nonumber<CR>
"nnoremap <Space>f :<C-u>Fern . -drawer<CR>:set nonumber<CR>
nnoremap <Space>ff :<C-u>Fern -drawer<Left><Left><Left><Left><Left><Left><Left><Space><Left>
'''

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
on_source = ['fern.vim']
hook_add = '''
let g:fern#renderer = 'nerdfont'
hi Directory ctermfg=39
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
on_event = 'CursorMoved'
hook_post_source = '''
let g:sandwich#recipes = deepcopy(g:sandwich#default_recipes)
let g:sandwich#recipes += [
			\ {'buns': ['「', '」'], 'match_syntax': 1},
			\ {'buns': ['『', '』'], 'match_syntax': 1},
			\ {'buns': ['（', '）'], 'match_syntax': 1},
			\]
'''

[[plugins]]
repo = 't9md/vim-quickhl'
on_event = 'VimEnter'
hook_add = '''
nmap <Space>M ^v$<Plug>(quickhl-manual-this)<ESC>

nmap <Space>mm <Plug>(quickhl-manual-this)
nmap <Space>mM <Plug>(quickhl-manual-reset)

nmap <Space>mn <Plug>(quickhl-manual-go-to-next)<SID><Space>m
nmap <Space>mp <Plug>(quickhl-manual-go-to-prev)<SID><Space>m
nnoremap <silent><script> <SID><Space>mn :<C-u>QuickhlManualGoToNext<CR><SID><Space>m
nnoremap <silent><script> <SID><Space>mp :<C-u>QuickhlManualGoToPrev<CR><SID><Space>m
nmap <SID><Space>m <Nop>

'''


[[plugins]]
repo = 'thinca/vim-quickrun'
on_ft = ['python', 'tex']
hook_add = '''
nnoremap <silent> <F5> :<C-u>w<CR>:QuickRun<CR>
let g:quickrun_config = {
\	'_': {
\		'runner': 'terminal',
\		'runner/terminal/opener': '10new',
\		'runner/terminal/append': '1'
\	},
\	'tex': {
\		'command': 'latexmk'
\	},
\	'python': {
\		'command': 'python',
\	}
\}
'''


[[plugins]]
repo = 'preservim/vim-markdown'
on_ft = ['markdown']
hook_add='''
let g:vim_markdown_folding_disabled = 1
'''


[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown']
hook_add='''
if(g:wsl)
	let g:previm_open_cmd = '/mnt/c/Program\ Files\ \(x86\)/Google/Chrome/Application/chrome.exe'
	let g:previm_wsl_mode = 1
else
	let g:previm_open_cmd = 'firefox'
endif

" :PrevimUpdateAssets (一括更新)
let g:previm_extra_libraries = [
\	{
\		'name': 'katex',
\		'files': [
\			{
\				'type': 'css',
\				'path': '_/css/extra/texmath.min.css',
\				'url': 'https://cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css',
\			},
\			{
\				'type': 'js',
\				'path': '_/js/extra/katex-auto-render.min.js',
\				'url': 'https://cdn.jsdelivr.net/npm/katex@latest/dist/contrib/auto-render.min.js',
\				'code': [
\					'renderMathInElement(document.body)',
\				]
\			},
\			{
\				'type': 'css',
\				'path': '_/css/extra/katex.min.css',
\				'url': 'https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css',
\				'code': [
\					'renderMathInElement(document.body)',
\				]
\			},
\			{
\				'type': 'js',
\				'path': '_/js/extra/katex.min.js',
\				'url': 'https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.js',
\				'code': [
\					'document.querySelectorAll(''pre code.language-katex'').forEach(elem => {',
\					'  const html = katex.renderToString(elem.innerText, {',
\					'    displayMode: true,',
\					'    output: ''html'',',
\					'    throwOnError: false',
\					'  })',
\					'  const span = document.createElement(''span'')',
\					'  span.innerHTML = html',
\					'  elem.parentNode.replaceWith(span)',
\					'})',
\					'document.querySelectorAll(''.inlkatex'').forEach(elem => {',
\					'  const html = katex.renderToString(elem.innerText, {',
\					'    output: ''html'',',
\					'    throwOnError: false,',
\					'})',
\					'  const span = document.createElement(''span'')',
\					'  span.innerHTML = html',
\					'  elem.replaceWith(span)',
\					'})',
\				],
\			},
\		],
\	},
\	{
\		'name': 'plotly',
\		'files': [
\			{
\				'type': 'js',
\				'path': '_/js/extra/plotly.min.js',
\				'url': 'https://cdn.plot.ly/plotly-2.12.1.min.js',
\				'code': [
\					'document.querySelectorAll(''pre code.language-plotlyjs'').forEach(elem => {',
\					'  const div = document.createElement(''div'')',
\					'  Plotly.newPlot(div, JSON.parse(elem.innerText))',
\					'  elem.parentNode.replaceWith(div)',
\					'})',
\				],
\			},
\		],
\	},
\]
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html']
hook_add='''
let g:user_emmet_leader_key='<C-e>'
'''


[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'
