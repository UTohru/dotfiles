

# vim-devicon -> nerdfont.vim
[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
let g:webdevicons_enable_nerdtree = 0
let g:webdevicons_enable_airline_tabline = 0
let g:webdevicons_enable_airline_statusline = 0
let g:webdevicons_enable_unite = 0
let g:webdevicons_enable_denite = 0
let g:webdevicons_enable_vimfilter = 0
let g:webdevicons_enable_ctrlp = 0
let g:webdevicons_enable_startify = 0
let g:webdevicons_enable_flagship = 0
let g:WebDevIconsUnicodeDecorateFileNodes = 0
" fast load
let g:DevIconsEnableDistro = 0


" lightline function"
""function! LLFiletype()
""	return winwidth(0) > 70 ? (strlen(&filetype) ? &filetype . ' ' . WebDevIconsGetFileTypeSymbol() . ' ' : 'no ft') : ''
""endfunction
""
""function! LLFileFormat()
""	return winwidth(0) > 70 ? (&fileformat . ' ' . WebDevIconsGetFileFormatSymbol()) : ''
""endfunction
'''

[[plugins]]
repo = 'lambdalisue/fern-renderer-devicons.vim'
on_source = ['fern.vim']
hook_add = '''
let g:fern#renderer = 'devicons'
hi Directory ctermfg=39
'''





[[plugins]]
repo = 'dense-analysis/ale'
on_i = 1
hook_add = '''
let g:ale_sign_column_always = 1
" let g:ale_fixers = {'python' ['']}  "整形""
let g:ale_linters = {
\	'python':['flake8', 'mypy']
\}
" lint "
let g:ale_lint_on_save = 1
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 0

""let g:ale_statusline_format = ['× %d', '⚠  %d', 'ok']

nnoremap <silent> <C-k> <Plug>(ale_previous_wrap)
nnoremap <silent> <C-j> <Plug>(ale_next_wrap)
'''


" [lightline]"
""function! LinterStatus() abort
"	let l:counts = ale#statusline#Count(bufnr(''))
"	let l:all_errors = l:counts.error + l:counts.style_error
"	let l:all_non_errors = l:counts.total - l:all_errors
"	return l:counts.total==0 ? '✓  OK' : printf('× %d  ⚠ %d', all_errors, all_non_errors)
"endfunction


[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
" 要追記"
let g:vimtex_compiler_latexmk = {'_': '-pdfdvi'}
" お試し"
let g:vimtex_view_general_viewer = ''
let g:vimtex_view_general_options = '-reuse-instance -forward-search @tex @line @pdf'
let g:vimtex_view_general_options_latexmk = '-reuse-instance'

'''



